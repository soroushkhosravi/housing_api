apiVersion: apps/v1
kind: Deployment
metadata:
  name: "terraform-example"
  labels:
    test: "MyExampleApp"
spec:
  replicas: 3
  selector:
    matchLabels:
      test: "MyExampleApp"
  template:
    metadata:
      labels:
        test: "MyExampleApp"
    spec:
      serviceAccountName: "housing-api"
      containers:
        - name: "example"
          image: "892893225782.dkr.ecr.us-west-2.amazonaws.com/housing-api:{{ .Values.commit }}"
          env:
            - name: DB_URL
              value: "postgresql://soroush:{{.Values.dbPassword}}@{{.Values.db}}/firstsoroushdb"
            - name: OAUTHLIB_INSECURE_TRANSPORT
              value: "1"
            - name: GOOGLE_CLIENT_ID
              value: "1039455511015-9of84all5bi5apuinop5nb02udkr02ad.apps.googleusercontent.com"
            - name: GOOGLE_CLIENT_SECRET
              value: "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"
            - name: SECRET_KEY
              value: "secret"
          command: ["gunicorn" , "--bind",  "0.0.0.0:5000" , "--workers", "3","app:app"]
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
      initContainers:
        - name: wait-for-app
          args:
            - /bin/bash
            - -c
            - >
              set -x;
              while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://example:5000" != "200" ]]; do
                echo '.'
                sleep 15;
              done
        containers:
          - name: "nginx"
            image: "892893225782.dkr.ecr.us-west-2.amazonaws.com/housing-api-nginx:{{ .Values.commit }}"
            ports:
              - name: http
                containerPort: 80
                protocol: TCP

